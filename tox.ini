;  See https://tox.wiki/en
[tox]
requires =
    tox>=4
; run lint by default when just calling "tox"
env_list = lint

; ENVIRONMENTS
; ------------
[style]
description = common environment for style checkers (rely on pre-commit hooks)
skip_install = true
deps =
    pre-commit

[global_var]
passenv =
    PY_COLORS
    FORCE_COLOR
    NO_COLOR
    CLICOLOR
    CLICOLOR_FORCE

[reproschema]
description = run tests
skip_install = true
deps =
    {toxinidir}/reproschema-py

; COMMANDS
; --------
[testenv:lint]
description = run all linters and formatters
skip_install = true
deps =
    {[style]deps}
commands =
	pre-commit run --all-files --show-diff-on-failure {posargs:}

[testenv:test]
description = run tests
passenv = {[global_var]passenv}
extras = test
deps =
    {[reproschema]deps}
commands =
    pytest --cov=ecobidas --cov-report=xml --cov-report=html tests

[testenv:doc]
description = serve doc
skip_install = true
deps =
    -r {toxinidir}/requirements.txt
commands =
	mkdocs serve

[testenv:convert]
; Fails
description = convert tsv to jsonld
deps =
    {[reproschema]deps}
commands =
    ; ecobidas_convert --schema resp-               --out_dir cobidas_schema/response_options
    ; ecobidas_convert --schema pet
    ; ecobidas_convert --schema eyetracking
    ; ecobidas_convert --schema reexecution
	; ecobidas_convert --schema mri-preproc
	; ecobidas_convert --schema mri-multivariate
    ecobidas_convert --schema artemis-              --out_dir artemis_schema/schemas
    ecobidas_convert --schema neurovault
    ecobidas_convert --schema core-
	ecobidas_convert --schema mri-design
	ecobidas_convert --schema mri-allseq
	ecobidas_convert --schema mri-acq
	ecobidas_convert --schema mri-mass_univariate
	ecobidas_convert --schema mri-results
[testenv:validate]
description = validate jsonld
skip_install = true
deps =
    {[reproschema]deps}
commands =
	reproschema -l DEBUG validate tests/data/activities
	reproschema -l DEBUG validate tests/data/protocols

[testenv:validate_all]
description = validate jsonld in subdmodules
skip_install = true
deps =
    {[reproschema]deps}
allowlist_externals =
    make
commands =
    {[validate]commands}
	make -C cobidas_schema validate
    make -C artemis_schema validate
